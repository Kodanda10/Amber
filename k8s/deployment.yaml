apiVersion: v1
kind: Namespace
metadata:
  name: amber
  labels:
    name: amber
    app: amber
---
apiVersion: v1
kind: Secret
metadata:
  name: amber-secrets
  namespace: amber
type: Opaque
stringData:
  # Database
  DATABASE_URL: "postgresql://user:password@postgres:5432/amber"
  
  # Admin authentication
  ADMIN_JWT_SECRET: "your-admin-jwt-secret-here-replace-in-production"
  ADMIN_BOOTSTRAP_SECRET: "your-bootstrap-secret-here"
  ADMIN_API_KEY: "your-admin-api-key-here"
  
  # Twitter/X API
  TWITTER_BEARER_TOKEN: "your-twitter-bearer-token-here"
  X_API_BEARER: "your-twitter-bearer-token-here"
  
  # Embedding
  EMBED_SIGNING_KEY: "your-embed-signing-key-at-least-32-chars-long-replace-in-production"
  
  # Facebook (optional)
  FACEBOOK_GRAPH_TOKEN: "your-facebook-token-here"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: amber-config
  namespace: amber
data:
  # Feature flags
  TWITTER_ENABLED: "1"
  X_INGEST_ENABLED: "true"
  INGESTION_DRY_RUN: "false"
  EMBED_ENABLED: "true"
  FACEBOOK_GRAPH_ENABLED: "0"
  
  # Limits
  TWITTER_LIMIT: "10"
  X_INGEST_LIMIT: "10"
  FACEBOOK_GRAPH_LIMIT: "5"
  POST_LIMIT: "6"
  
  # Embed configuration
  EMBED_ALLOWED_ORIGINS: "https://example.com,https://trusted-domain.com"
  EMBED_TOKEN_TTL: "60"
  EMBED_RATE_LIMIT_REQUESTS: "10"
  EMBED_RATE_LIMIT_WINDOW: "60"
  
  # Admin JWT
  ADMIN_JWT_TTL: "3600"
  
  # Checkpoint storage
  CHECKPOINT_DIR: "/app/data/checkpoints"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: amber-data
  namespace: amber
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amber-backend
  namespace: amber
  labels:
    app: amber
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: amber
      component: backend
  template:
    metadata:
      labels:
        app: amber
        component: backend
    spec:
      containers:
      - name: backend
        image: amber-backend:latest  # Replace with your image
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        # Load secrets
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: amber-secrets
              key: DATABASE_URL
        - name: ADMIN_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: amber-secrets
              key: ADMIN_JWT_SECRET
        - name: ADMIN_BOOTSTRAP_SECRET
          valueFrom:
            secretKeyRef:
              name: amber-secrets
              key: ADMIN_BOOTSTRAP_SECRET
        - name: ADMIN_API_KEY
          valueFrom:
            secretKeyRef:
              name: amber-secrets
              key: ADMIN_API_KEY
        - name: TWITTER_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: amber-secrets
              key: TWITTER_BEARER_TOKEN
        - name: X_API_BEARER
          valueFrom:
            secretKeyRef:
              name: amber-secrets
              key: X_API_BEARER
        - name: EMBED_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: amber-secrets
              key: EMBED_SIGNING_KEY
        - name: FACEBOOK_GRAPH_TOKEN
          valueFrom:
            secretKeyRef:
              name: amber-secrets
              key: FACEBOOK_GRAPH_TOKEN
              optional: true
        # Load config
        - name: TWITTER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: amber-config
              key: TWITTER_ENABLED
        - name: X_INGEST_ENABLED
          valueFrom:
            configMapKeyRef:
              name: amber-config
              key: X_INGEST_ENABLED
        - name: INGESTION_DRY_RUN
          valueFrom:
            configMapKeyRef:
              name: amber-config
              key: INGESTION_DRY_RUN
        - name: EMBED_ENABLED
          valueFrom:
            configMapKeyRef:
              name: amber-config
              key: EMBED_ENABLED
        - name: EMBED_ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: amber-config
              key: EMBED_ALLOWED_ORIGINS
        - name: CHECKPOINT_DIR
          valueFrom:
            configMapKeyRef:
              name: amber-config
              key: CHECKPOINT_DIR
        volumeMounts:
        - name: data
          mountPath: /app/data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: amber-data
---
apiVersion: v1
kind: Service
metadata:
  name: amber-backend
  namespace: amber
  labels:
    app: amber
    component: backend
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: amber
    component: backend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: amber-backend
  namespace: amber
  annotations:
    # Nginx ingress annotations (adjust for your ingress controller)
    nginx.ingress.kubernetes.io/rewrite-target: /
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "10"
    # CORS (if needed)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
spec:
  ingressClassName: nginx
  rules:
  - host: api.amber.example.com  # Replace with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: amber-backend
            port:
              number: 5000
  # TLS configuration (uncomment and configure for HTTPS)
  # tls:
  # - hosts:
  #   - api.amber.example.com
  #   secretName: amber-tls
