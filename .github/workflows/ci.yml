name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend:
    name: Frontend - Lint & Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nextjs-app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: nextjs-app/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type Check
        run: npx tsc --noEmit

      - name: Build
        run: npm run build

  backend:
    name: Backend - Tests & Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nextjs-app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('nextjs-app/backend/requirements.txt') }}

      - name: Install dependencies
        run: python -m pip install --upgrade pip && pip install -r backend/requirements.txt

      - name: Lint (ruff)
        run: |
          pip install ruff==0.6.9
          ruff check backend || true

      - name: Run tests
        run: |
          cd backend
          python -m pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=xml --cov-fail-under=80

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: nextjs-app/backend/coverage.xml

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Trivy FS Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          ignore-unfixed: true
          format: table
          exit-code: '0'
          severity: HIGH,CRITICAL

      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  e2e:
    name: E2E Placeholder
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    steps:
      - name: Note
        run: echo "Add Playwright tests in future; placeholder keeps pipeline structure intact." 
